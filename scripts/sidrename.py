#!/usr/bin/env python

'''
 @file    sidrename.py
 @author  Andrea Giachero <andrea.giachero@mib.infn.it> 
 @date    17 October 2023
 @brief   Script to rename the geo_response_d.sid results file generated by Sonnet
          Usage: ./create_KIT.py --path 

'''


import sys, os, shutil, time
import argparse


whoami = lambda: sys._getframe(1).f_code.co_name

def sidrename(filename, savepath, newpath=None):


    subdirs  = sorted([f.path for f in os.scandir(savepath) if f.is_dir()])
    oldnames = [os.path.join(s, filename) for s in subdirs]
    newnames = [os.path.join(s,os.path.basename(s))+'.sid' for s in subdirs]
    
    for o, n in zip(oldnames, newnames):
        print('Copying {f}'.format(f=o))
        shutil.copy2(o, n) if os.path.isfile(o) else None
        shutil.copy2(n, newpath) if newpath and os.path.exists(newpath) else None
        
    return 


def main():
    parser = argparse.ArgumentParser(description='Script to rename the geo_response_d.sid results file generated by Sonnet')
    parser.add_argument("-p", "--path"   , dest="savepath" , type=str  , help="Savepath where the file is actually saved", required = True)
    parser.add_argument("-f", "--file"   , dest="filename" , type=str  , help="Sonnet with results filename to rename", default = 'geo_response_d.sid')
    parser.add_argument("-n", "--newpath", dest="newpath"  , type=str  , help="Final destination path", required = False)
    
    args = parser.parse_args()

    if len(sys.argv[1:]) == 0:
        parser.error('No argument given!')
        return 

    if args.savepath and not os.path.exists(args.savepath):
        parser.error('Path {name} does not exist!'.format(name=args.savepath))
        return


    args.newpath=os.path.join(args.newpath, 'simdata') if args.newpath and os.path.exists(args.newpath) else None
    os.makedirs(args.newpath) if args.newpath and not os.path.exists(args.newpath) else None
    
    sidrename(args.filename, args.savepath, args.newpath)

    #print ('({name}) Created new file: {newfile} ' .format(name = whoami(), newfile=newfilename))
    
    return


if __name__ == '__main__':
    main()
